// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// 
datasource db {
  provider             = "mysql"
  // Further reading: 
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String     @id @default(cuid())
  name          String
  email         String?    @unique
  emailVerified DateTime?
  image         String     @default("/userPlaceholder.png")
  accounts      Account[]
  sessions      Session[]
  artists       Artist[]
  playlists     Playlist[]
  favorite      Favorite?  @relation(fields: [favoriteId], references: [id])
  favoriteId    String     @unique
}

model Favorite {
  id        String     @id @default(cuid())
  songs     Song[]
  artists   Artist[]
  albums    Album[]
  playlists Playlist[]
  User      User?      @relation
  userId    String     @unique
}

model Artist {
  id         String     @id @default(cuid())
  name       String
  image      String
  albums     Album[]
  users      User[]
  isVerified Boolean    @default(false)
  favorites  Favorite[]
}

model Album {
  id        String     @id @default(cuid())
  name      String
  image     String
  createdAt DateTime
  songs     Song[]
  Artist    Artist     @relation(fields: [artistId], references: [id])
  artistId  String
  favorites Favorite[]
}

model Song {
  id        String     @id @default(cuid())
  name      String
  createdAt DateTime
  duration  Int
  url       String
  Album     Album      @relation(fields: [albumId], references: [id])
  albumId   String
  playlists Playlist[]
  favorites Favorite[]
}

model Playlist {
  id        String     @id @default(cuid())
  name      String
  image     String     @default("")
  desc      String     @default("")
  songs     Song[]
  User      User       @relation(fields: [userId], references: [id])
  userId    String
  favorites Favorite[]
}
